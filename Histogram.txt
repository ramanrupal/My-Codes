struct stack
{
    int data;
    struct stack* next;
};
void push(struct stack** top , int data)
{
    struct stack* nn = (struct stack*)malloc(sizeof(struct stack));
    nn->data = data;
    nn->next = *top;
    *top = nn;
}
int peek(struct stack** top)
{
    return (*top)->data;
}
int isEmpty(struct stack** top)
{
    if((*top) == NULL)
        return 1;
    return 0;
}
void pop(struct stack** top)
{
    struct stack* temp = (*top);
    (*top) = (*top)->next;
    free(temp);
    temp = NULL;
}
int largestRectangleArea(int* arr, int n) 
{
     int max = 0;
    int area = 0;
    int i = 0;
    struct stack* s = NULL;
    while(i < n)
    {
        if(isEmpty(&s) || arr[peek(&s)] <= arr[i])
        {
            push(&s , i);
            i++;
        }
        else
        {
            int top1 = peek(&s);
            pop(&s);
            area = arr[top1] * (isEmpty(&s)?i:i-peek(&s)-1);
            if(max < area)
                max = area;
        }
    }
    while(!isEmpty(&s))
    {
        int top1 = peek(&s);
        pop(&s);
        area = arr[top1] * (isEmpty(&s) ? i : i - peek(&s) - 1);
        if(max < area)
            max = area;
    }
    return max;
}